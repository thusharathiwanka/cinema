name: Development Pipeline
on:
  pull_request:
    branches:
      - main

jobs:
  lint-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup/

      - name: Lint
        run: yarn lint

      - name: Type check
        run: yarn type-check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint-typecheck

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup/

      - name: Unit tests
        run: yarn unit

  build-deploy:
      name: Build and Deploy
      needs: unit-tests
      runs-on: ubuntu-latest

      # outputs:
      #   deployed-url: ${{ steps.deploy.outputs.deployed-url }}

      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup/

      - name: Build project artifacts
        run: yarn build

      - name: Deploy to vercel
        id: deploy
        uses: ./.github/actions/deploy/
        with:
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}


        # - name: Comment PR with deployed URL
        #   uses: actions/github-script@v6
        #   with:
        #     github-token: ${{ secrets.GITHUB_TOKEN }}
        #     script: |
        #       const url = "${{ steps.deploy.outputs.deployed-url }}";
        #       const pr = context.payload.pull_request;
        #       if (pr) {
        #         await github.rest.issues.createComment({
        #           owner: context.repo.owner,
        #           repo: context.repo.repo,
        #           issue_number: pr.number,
        #           body: `ðŸš€ The app has been deployed to: ${url}`
        #         });
        #       } else {
        #         console.log("No pull request found.");
        #       }

  # integration-tests:
  #   name: Integration Tests
  #   runs-on: ubuntu-latest
  #   needs: build-deploy

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup environment
  #       uses: ./.github/actions/setup/

  #     - name: Run integration tests
  #       env:
  #         BASE_URL: ${{ needs.build-deploy.outputs.deploy-url }}
  #       run: yarn test:integration
